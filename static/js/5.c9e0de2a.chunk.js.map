{"version":3,"sources":["pages/SignUpPage/SignUpPage.module.css","components/forms/SignUpForm/SignUpForm.module.css","components/forms/SignUpForm/index.jsx","pages/SignUpPage/index.jsx","components/forms/CustomInput/index.jsx","components/forms/CustomInput/CustomInput.module.css","utils/validationScheams.js"],"names":["module","exports","SignUpForm","props","initialValues","first_name","last_name","screen_name","email_address","password","password_confirmation","user_is","terms_conditions","errors","onSubmit","values","formikBag","alert","localStorage","setItem","JSON","stringify","resetForm","validationSchema","signUpScheme","className","styles","component","inputBlock","CustomInput","input","name","type","placeholder","error","label","radio","id","value","other","checkbox","htmlFor","submit","link","href","target","facebook","google","SignUpPage","state","header","Component","rest","field","meta","inputClasses","cx","invalid","touched","valid","signInScheme","Yup","email","max","required","remember_me","min","matches","oneOf"],"mappings":"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","file":"static/js/5.c9e0de2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SignUpPage_component__wgJXg\",\"header\":\"SignUpPage_header__1qwe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SignUpForm_component__3ktam\",\"inputBlock\":\"SignUpForm_inputBlock__1_u0L\",\"input\":\"SignUpForm_input__f9_g8\",\"error\":\"SignUpForm_error__2aOmx\",\"checkbox\":\"SignUpForm_checkbox__1acrT\",\"label\":\"SignUpForm_label__1ADtq\",\"radio\":\"SignUpForm_radio__urpPf\",\"submit\":\"SignUpForm_submit__3I9bU\",\"facebook\":\"SignUpForm_facebook__1mjkY\",\"google\":\"SignUpForm_google__1b4j9\",\"other\":\"SignUpForm_other__2CgD9\",\"link\":\"SignUpForm_link__2p2KZ\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport React from 'react';\r\nimport styles from './SignUpForm.module.css';\r\nimport CustomInput from './../CustomInput/index';\r\nimport { signUpScheme } from './../../../utils/validationScheams';\r\n\r\nconst SignUpForm = (props) => {\r\n  const initialValues = {\r\n    first_name: '',\r\n    last_name: '',\r\n    screen_name: '',\r\n    email_address: '',\r\n    password: '',\r\n    password_confirmation: '',\r\n    user_is: '',\r\n    terms_conditions: false,\r\n    errors: null,\r\n  };\r\n\r\n  const submitHandler = (values, formikBag) => {\r\n    if (!values.user_is) {\r\n      alert('Please specify whether you are a Creative or a Buyer');\r\n    }\r\n    if (values.user_is) {\r\n      localStorage.setItem(values.email_address, JSON.stringify(values));\r\n      formikBag.resetForm();\r\n      alert(\"Your account was created\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={submitHandler}\r\n      validationSchema={signUpScheme}\r\n    >\r\n      <Form className={styles.component}>\r\n        <span className={styles.inputBlock}>\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='first_name'\r\n            type='text'\r\n            placeholder='First name'\r\n          />\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='last_name'\r\n            type='text'\r\n            placeholder='last name'\r\n          />\r\n        </span>\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='first_name'\r\n          component='div'\r\n        />\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='last_name'\r\n          component='div'\r\n        />\r\n        <span className={styles.inputBlock}>\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='screen_name'\r\n            type='text'\r\n            placeholder='Display Name'\r\n          />\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='email_address'\r\n            type='text'\r\n            placeholder='Email Address'\r\n          />\r\n        </span>\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='screen_name'\r\n          component='div'\r\n        />\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='email_address'\r\n          component='div'\r\n        />\r\n        <span className={styles.inputBlock}>\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='password'\r\n            type='password'\r\n            placeholder='Password'\r\n          />\r\n          <CustomInput\r\n            className={styles.input}\r\n            name='password_confirmation'\r\n            type='password'\r\n            placeholder='Password Confirmation'\r\n          />\r\n        </span>\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='password'\r\n          component='div'\r\n        />\r\n        <ErrorMessage\r\n          className={styles.error}\r\n          name='password_confirmation'\r\n          component='div'\r\n        />\r\n        <div>\r\n          <label className={styles.label}>\r\n            <Field\r\n            className={styles.radio}\r\n              id='join-as-client'\r\n              name='user_is'\r\n              value='Buyer'\r\n              type='radio'\r\n            />\r\n            <span>\r\n            <h2>Join As a Buyer</h2>\r\n            <p>\r\n              I am looking for a Name, Logo or Tagline for my business, brand or\r\n              product.\r\n            </p>\r\n            </span>\r\n          </label>\r\n          <label className={styles.label}>\r\n            <Field\r\n            className={styles.radio}\r\n              id='join-as-creative'\r\n              name='user_is'\r\n              value='Creative'\r\n              type='radio'\r\n            />\r\n            <span>\r\n              <h2>Join As a Creative or Marketplace Seller</h2>\r\n              <p>\r\n                I plan to submit name ideas, Logo designs or sell names in\r\n                Domain Marketplace.\r\n              </p>\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className={styles.other}>\r\n          <Field\r\n            className={styles.checkbox}\r\n            name='terms_conditions'\r\n            type='checkbox'\r\n            id='terms_conditions'\r\n          />\r\n          <label htmlFor='terms_conditions'>\r\n            {' '}\r\n            Allow Squadhelp to send marketing/promotional offers from time to\r\n            time\r\n          </label>\r\n        </div>\r\n        <Field\r\n          className={styles.submit}\r\n          name='submit'\r\n          type='submit'\r\n          value='Create account'\r\n        />\r\n        <div className={styles.other}>\r\n          <p>\r\n            By clicking this button, you agree to our{' '}\r\n            <a className={styles.link}\r\n              href='https://www.squadhelp.com/Terms&amp;Conditions'\r\n              target='blank'\r\n            >\r\n              Terms of Service\r\n            </a>\r\n            .\r\n          </p>\r\n        </div>\r\n        <Field\r\n          className={styles.facebook}\r\n          name='submit_facebook'\r\n          type='button'\r\n          value='Sign up with Facebook'\r\n        />\r\n        <Field\r\n          className={styles.google}\r\n          name='submit_google'\r\n          type='button'\r\n          value='Sign up with Google'\r\n        />\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React, {Component} from 'react';\r\nimport styles from './SignUpPage.module.css';\r\nimport SignUpForm from '../../components/forms/SignUpForm';\r\n\r\nclass SignUpPage extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.component}>\r\n        <div className={styles.header}>\r\n          <h1>CREATE AN ACCOUNT</h1>\r\n          <p>We always keep your name and email address private.</p>\r\n        </div>\r\n        <SignUpForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport styles from './CustomInput.module.css';\r\nimport cx from 'classnames';\r\n\r\nconst CustomInput = (props) => {\r\n  const {className, name, ...rest } = props;\r\n\r\n  \r\n    return (\r\n      <Field name={name}>\r\n        {({ field, meta }) => {\r\n          const inputClasses = cx( className,{\r\n            [styles.invalid]: meta.touched && meta.error,\r\n            [styles.valid]: !meta.error && meta.touched,\r\n          });\r\n            return <input {...field} {...rest} className={inputClasses} />;       \r\n        }}\r\n      </Field>\r\n    );\r\n  };\r\n\r\nexport default CustomInput;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"valid\":\"CustomInput_valid__2ERV0\",\"invalid\":\"CustomInput_invalid__GJ7-_\",\"error\":\"CustomInput_error__reTWa\"};","import * as Yup from 'yup';\r\n\r\nexport const signInScheme = Yup.object({\r\n  email_address: Yup.string()\r\n    .email('Email is not valid format')\r\n    .max(128)\r\n    .required('This is required field'),\r\n  password: Yup.string()\r\n    .required('Password cannot be empty'),\r\n  remember_me: Yup.boolean().required('This is required field'),\r\n});\r\n\r\nexport const signUpScheme = Yup.object({\r\n  first_name: Yup.string().min(1).max(32).required('Field cannot be empty'),\r\n  last_name: Yup.string().min(1).max(32).required('Field cannot be empty'),\r\n  screen_name: Yup.string()\r\n    .min(4)\r\n    .max(32)\r\n    .required('Display name should be more than 4 characters'),\r\n  email_address: Yup.string()\r\n    .email('Please check the format of email address')\r\n    .max(128)\r\n    .required('Please check the format of email address'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])[^\\s]{8,32}$/,\r\n      'Password must contain at least 8 letters....'\r\n    )\r\n    .required('Password cannot be empty'),\r\n  password_confirmation: Yup.string()\r\n    .required('Password confirmation needs to match original password')\r\n    .oneOf(\r\n      [Yup.ref('password'), null],\r\n      'Password confirmation needs to match original password'\r\n    ),\r\n});\r\n"],"sourceRoot":""}